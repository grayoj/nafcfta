// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String               @id @default(cuid())
  email        String               @unique
  password     String?
  isVerified   Boolean              @default(false)
  role         Role                 @default(EXPORTER)
  profile      Profile?
  verification VerificationCode?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  Document     Document[]
  Application  Application[]
  comments     ApplicationComment[]
}

model Profile {
  id       String  @id @default(cuid())
  userId   String  @unique
  fullName String
  company  String
  phone    String?
  address  String?
  user     User    @relation(fields: [userId], references: [id])
}

model VerificationCode {
  id        String   @id @default(cuid())
  code      String
  userId    String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Document {
  id           String        @id @default(cuid())
  userId       String
  documentUrl  String
  documentType String
  name         String?
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User          @relation(fields: [userId], references: [id])
  Application  Application[]
}

model Application {
  id             String               @id @default(cuid())
  userId         String
  documentId     String
  details        String
  status         String               @default("PENDING")
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  submissionDate DateTime?
  user           User                 @relation(fields: [userId], references: [id])
  document       Document             @relation(fields: [documentId], references: [id])
  comments       ApplicationComment[]
}

model ApplicationComment {
  id            String      @id @default(cuid())
  applicationId String
  userId        String
  comment       String
  createdAt     DateTime    @default(now())
  application   Application @relation(fields: [applicationId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  DCA
  EXPORTER
  IMPORTER
}
